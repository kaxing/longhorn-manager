/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta2

import (
	v1beta2 "github.com/longhorn/longhorn-manager/k8s/pkg/apis/longhorn/v1beta2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HousekeepingLister helps list Housekeepings.
type HousekeepingLister interface {
	// List lists all Housekeepings in the indexer.
	List(selector labels.Selector) (ret []*v1beta2.Housekeeping, err error)
	// Housekeepings returns an object that can list and get Housekeepings.
	Housekeepings(namespace string) HousekeepingNamespaceLister
	HousekeepingListerExpansion
}

// housekeepingLister implements the HousekeepingLister interface.
type housekeepingLister struct {
	indexer cache.Indexer
}

// NewHousekeepingLister returns a new HousekeepingLister.
func NewHousekeepingLister(indexer cache.Indexer) HousekeepingLister {
	return &housekeepingLister{indexer: indexer}
}

// List lists all Housekeepings in the indexer.
func (s *housekeepingLister) List(selector labels.Selector) (ret []*v1beta2.Housekeeping, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta2.Housekeeping))
	})
	return ret, err
}

// Housekeepings returns an object that can list and get Housekeepings.
func (s *housekeepingLister) Housekeepings(namespace string) HousekeepingNamespaceLister {
	return housekeepingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HousekeepingNamespaceLister helps list and get Housekeepings.
type HousekeepingNamespaceLister interface {
	// List lists all Housekeepings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta2.Housekeeping, err error)
	// Get retrieves the Housekeeping from the indexer for a given namespace and name.
	Get(name string) (*v1beta2.Housekeeping, error)
	HousekeepingNamespaceListerExpansion
}

// housekeepingNamespaceLister implements the HousekeepingNamespaceLister
// interface.
type housekeepingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Housekeepings in the indexer for a given namespace.
func (s housekeepingNamespaceLister) List(selector labels.Selector) (ret []*v1beta2.Housekeeping, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta2.Housekeeping))
	})
	return ret, err
}

// Get retrieves the Housekeeping from the indexer for a given namespace and name.
func (s housekeepingNamespaceLister) Get(name string) (*v1beta2.Housekeeping, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta2.Resource("housekeeping"), name)
	}
	return obj.(*v1beta2.Housekeeping), nil
}
